#!/bin/bash

CURDIR=$PWD
DIR="$( cd "$( dirname "$0" )" && pwd )"
# echo "-----> Installing latest caddy bin"
# if [ -f $2/caddy_linux_amd64.zip ]; then
#   echo "-----> caddy is already installed"
#   cd $2; unzip -o caddy_linux_amd64.zip
#   cp $2/caddy_linux_amd64 $1/caddy
# else
#   echo "-----> download and unzip caddy"
#   cd $2; wget https://github.com/mholt/caddy/releases/download/v1.0.0/caddy_v1.0.0_linux_amd64.tar.gz
#   cd $2; mkdir -p /app/tmp/cache
#   cd $2; tar -xvzf caddy_v1.0.0_linux_amd64.tar.gz
# #   cd $2; unzip caddy_v1.0.0_linux_amd64.tar.gz
#   cp $2/init/linux-sysvinit/caddy $1/caddy
# fi

cd $DIR; cp ../caddy /usr/local/bin/caddy
cd CURDIR

prebuild_setup() {
    echo "-----> setup prebuild"
    mkdir /prebuild
    cp /app /prebuild
    export PATH="./node_modules/.bin:$PATH"
}

build_frontend() {
    echo "-----> setup frontend"
    echo "$(git rev-parse HEAD)" > VERSION && \
        echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc && \
        npm rebuild node-sass --force && \
        npm i . && \
        sed -i "s/VERSION/$(cat VERSION)/g" apps/*/src/environments/environment.*.ts && \
        mkdir -p /home/www && \
        ./build_frontend.sh
}

build_receipt() {
    echo "-----> setup receipt"
    mkdir -p /home/www/receipt && \
    ng build --project=receipt --prod --output-path=/home/www/receipt --deploy-url="/receipt/" --base-href="/receipt/"
}

build_payment() {
    echo "-----> setup payment"
    mkdir -p /home/www/payment && \
    ng build --project=payment --prod --output-path=/home/www/payment --deploy-url="/payment/" --base-href="/payment/"
}

build() {
    echo "-----> setup apps"
    build_frontend
    build_receipt
    build_payment
    cp /prebuild/Caddyfile$LEVPAY_ENVIRONMENT /prebuild/Caddyfile
    cd /home/www
}

build